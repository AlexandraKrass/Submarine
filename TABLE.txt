CREATE TABLE tst.boat
(
  id_boat serial NOT NULL,
  ti integer,
  country character varying(40),
  mark character varying(40),
  color character varying(40),
  availability character varying(40),
  CONSTRAINT boat_pkey PRIMARY KEY (id_boat),
  CONSTRAINT boat_ti_fkey FOREIGN KEY (ti)
      REFERENCES tst.ti (id_ti) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE TABLE tst.clients
(
  id_client serial NOT NULL,
  full_name character varying(40),
  pass_data character varying(40),
  address character varying(40),
  tel_number integer,
  CONSTRAINT clients_pkey PRIMARY KEY (id_client)
)

CREATE TABLE tst.realization
(
  id_rlztn serial NOT NULL,
  date date,
  delivery character varying(40),
  payment character varying(40),
  client integer,
  boat integer,
  CONSTRAINT realization_pkey PRIMARY KEY (id_rlztn),
  CONSTRAINT realization_boat_fkey FOREIGN KEY (boat)
      REFERENCES tst.boat (id_boat) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT realization_client_fkey FOREIGN KEY (client)
      REFERENCES tst.clients (id_client) MATCH SIMPLE
      ON UPDATE NO ACTION ON DELETE NO ACTION
)

CREATE TABLE tst.ti
(
  id_ti serial NOT NULL,
  length integer,
  type_shell integer,
  crew integer,
  number_bay integer,
  number_rocket integer,
  CONSTRAINT ti_pkey PRIMARY KEY (id_ti)
)


Create or Replace Function tst.boat_sale( query json ) returns json As $$
 
    Declare
        qb jsonb := query::jsonb;
        cashing varchar := cast( qb->>'payment' as varchar );
        first_name varchar := cast( qb->>'full_name' as varchar );
        model varchar := cast( qb->>'mark' as varchar );
        value int := cast(qb->>'cost'  as int);
        cash json;
               
    Begin
    
        -- Insert Into app.boat_table ( payment, full_name, mark ) 

        Select array_to_json( array_agg( t4 ) ) From (

          Select 

               full_name,  mark, cost, payment 
                
              From tst.clients t1 JOIN tst.realization t2 ON t1.id_client=t2.client 
                      JOIN tst.boat t3  ON t2.boat=t3.id_boat
              
            WHERE payment = cashing
               OR full_name = first_name 
               OR mark = model 
            ORDER BY full_name ASC

        ) t4 Into cash;
               
        Return cash;
        
    End;
    
$$ language plpgsql;